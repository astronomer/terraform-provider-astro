# Terraform Provider testing workflow.
name: Acceptance Tests

# This GitHub action runs your tests for each pull request and push.
# Optionally, you can turn it on using a schedule for regular testing.
on:
  issue_comment:
    types: [created]
    paths-ignore:
      - 'README.md'
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

# Testing only needs permissions to read the repository contents.
permissions:
  contents: read

jobs:
  build:
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/run-testacc')
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: go mod download
      - run: go build -v .

  comment-triggered-testacc:
    # This job runs on issue_comment event with /run-testacc command.
    # We will block merging to main unless this job passes
    # The reason we don't want to run this on every push is because it's expensive/creates real resources
    if: ${{ github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.comment.body, '/run-testacc') }}
    name: Terraform Provider Acceptance Tests
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    timeout-minutes: 15
    strategy:
      fail-fast: true
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.7.*'
          - '1.6.*'
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
        run: make testacc
        timeout-minutes: 10

  main-testacc:
    # This job runs on push to main branch.
    if: ${{ github.event_name == 'push' }}
    name: Terraform Provider Acceptance Tests
    needs: build
    environment: dev
    timeout-minutes: 15
    strategy:
      fail-fast: true
      matrix:
        # list whatever Terraform versions here you would like to support
        terraform:
          - '1.7.*'
          - '1.6.*'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-go@0c52d547c9bc32b1aa3301fd7a9cb496313a4491 # v5.0.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - uses: hashicorp/setup-terraform@a1502cd9e758c50496cc9ac5308c4843bcd56d36 # v3.0.0
        with:
          terraform_version: ${{ matrix.terraform }}
          terraform_wrapper: false
      - run: go mod download
      - env:
          TF_ACC: "1"
        run: make testacc
        timeout-minutes: 10
